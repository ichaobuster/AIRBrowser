<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:component="com.ichaobuster.browser.component.*"
		 xmlns:basic="com.ichaobuster.browser.component.basic.*"
		 creationComplete="init()"
		 width="100%" height="100%">
	<fx:Script>
		<![CDATA[
			import com.ichaobuster.browser.event.FileDownloadEvent;
			import com.ichaobuster.browser.event.WebPageEvent;
			
			import flash.net.navigateToURL;
			
			import mx.events.DynamicEvent;
			
			[Bindable]
			public var label:String = "";
			
			[Bindable]
			public var location:String;
			
			[Bindable]
			public var homeLink:String="assets/page/about_blank.html";

			[Bindable]
			public var homeEnabled:Boolean = true;
			
			[Bindable]
			public var urlEditabled:Boolean = true;
			
			[Bindable]
			public var addNewPageEnabled:Boolean = true;
			
			[Bindable]
			public var fixed:Boolean = false;
			
			[Bindable]
			public var navigateByBrowser:Boolean = false;
			
			public function init():void
			{
				htmlPage.addEventListener(Event.COMPLETE, htmlPageCompleteHandler);
				htmlPage.addEventListener("createNewTabEvent", createNewTabHandler);
				htmlPage.addEventListener("startDownload",startDownloadEventHandler);
				htmlPage.addEventListener("completeDownload",completeDownloadEventHandler);
				
				htmlPage.addEventListener(FileDownloadEvent.FILE_DOWNLOAD_EVENT, fileDownloadHandler);
				
				fileDown.addEventListener("fileDownloadComplete", fileDownloadCompleteHandler);
			}
			
			public function logoutHandler():void {
				htmlPage.loadBlankPage();
				controller.reset();
			}
			
			//=============================================================
			//
			// HTMLLoader事件响应
			//
			//=============================================================
			protected function createNewTabHandler(event:DynamicEvent):void
			{
				var newLoader:HTMLLoader = event.htmlLoader as HTMLLoader;
				newLoader.addEventListener(LocationChangeEvent.LOCATION_CHANGE, proLoadHtmlLoaderHandler);
			}
			
			protected function htmlPageCompleteHandler(event:Event):void
			{
				controller.dispatchEvent(new Event(Event.COMPLETE));
			}
			
			protected function startDownloadEventHandler(event:Event):void
			{
				fileDown.prepareDownload();
			}
			
			protected function completeDownloadEventHandler(event:Event):void
			{
				
			}
			
			protected function fileDownloadHandler(event:FileDownloadEvent):void{
				fileDown.downloadFile(event.fileData, event.fileName);
			}
			
			protected function fileDownloadCompleteHandler(event:Event):void{
				if (htmlPage.label== null ||htmlPage.label== "" ){
					dispatchEvent(new WebPageEvent(WebPageEvent.CLOSE_THIS_TAB,"",true));	
				}
			}
			
			//=============================================================
			//
			// 其他页面元素交互事件响应
			//
			//=============================================================
			private function proLoadHtmlLoaderHandler(event:LocationChangeEvent):void
			{
				(event.target as HTMLLoader).removeEventListener(LocationChangeEvent.LOCATION_CHANGE, proLoadHtmlLoaderHandler);
				if (navigateByBrowser){
					navigateToURL(new URLRequest(event.location));
				}else{
					// 事件冒泡
					var webPageEvent:WebPageEvent = new WebPageEvent(WebPageEvent.CREATE_NEW_TAB_WITH_URL, event.location, true);
					dispatchEvent(webPageEvent);
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Rect top="0" bottom="0" left="0" right="0">
		<s:stroke>
			<s:SolidColorStroke weight="1" color="#017ccc"/>
		</s:stroke>
	</s:Rect>
	<s:VGroup top="1" bottom="1" left="1" right="1"
			  gap="0">
		<component:BrowserController id="controller" width="100%" 
									 location="{location}"
							  		 page="{htmlPage}"
									 homeLink="{homeLink}"
									 homeEnabled="{homeEnabled}"
									 urlEditabled="{urlEditabled}"
									 fixed="{fixed}"
									 addNewPageEnabled="{addNewPageEnabled}"/>
		<basic:CustomHTML id="htmlPage" width="100%" height="100%"
							  label="@{label}"/>
		<component:FileDownloadView id="fileDown"
									width="100%"
									visible="false" includeInLayout="false"/>
	</s:VGroup>
	<s:Image source="assets/img/downBig.png" bottom="40" right="0"
			 visible="{fileDown.visible&amp;&amp;fileDown.currentState=='download'}"/>
</s:Group>
